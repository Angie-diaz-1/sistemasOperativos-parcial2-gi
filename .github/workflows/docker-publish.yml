name: Build, Scan, Push and Verify Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-verify:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🧱 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 📌 Extract short commit SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - name: 🛠️ Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            angiediazz/sistemasoperativos-parcial2-gi-api:latest
            angiediazz/sistemasoperativos-parcial2-gi-api:${{ steps.vars.outputs.sha_short }}

      - name: 🧪 Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@0.30.0
        with:
          image-ref: angiediazz/sistemasoperativos-parcial2-gi-api:latest
          format: table
          exit-code: 1
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: CRITICAL,HIGH


      - name: 🚀 Run container and test healthcheck
        run: |
          docker run -d --name test-container -p 8080:8080 angiediazz/sistemasoperativos-parcial2-gi-api:latest
          echo "⏳ Esperando que arranque el contenedor..."
          sleep 5
          echo "📡 Realizando petición al endpoint /health..."
          response=$(curl -s http://localhost:8080/health)
          echo "Respuesta: $response"
          if [[ "$response" != *"Hola Docker!"* ]]; then
            echo "❌ La respuesta no es válida."
            docker logs test-container
            docker stop test-container
            docker rm test-container
            exit 1
          fi
          echo "✅ Contenedor respondió correctamente."
          docker stop test-container
          docker rm test-container

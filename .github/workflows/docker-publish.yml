name: Build, Scan, Push and Verify Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-verify:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.adminCommand(\"ping\")'" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🧪 Run unit tests and generate coverage
        run: |
          go test ./... -coverpkg=./controller,./service -coverprofile=coverage.out
          go tool cover -func=coverage.out

          echo "✅ Validando cobertura mínima"
          threshold=80.0
          coverage=$(go tool cover -func=coverage.out | grep total | awk '{print substr($3, 1, length($3)-1)}')
          echo "Cobertura actual: $coverage%"
          awk "BEGIN {exit ($coverage < $threshold) ? 1 : 0}"

      - name: 🧱 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🔐 Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: 📌 Extract short commit SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - name: 🛠️ Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            angiediazz/sistemasoperativos-parcial2-gi-api:latest
            angiediazz/sistemasoperativos-parcial2-gi-api:${{ steps.vars.outputs.sha_short }}
            ghcr.io/angie-diaz-1/sistemasoperativos-parcial2-gi-api:latest
            ghcr.io/angie-diaz-1/sistemasoperativos-parcial2-gi-api:${{ steps.vars.outputs.sha_short }}

      - name: 🔍 Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@0.30.0
        with:
          image-ref: angiediazz/sistemasoperativos-parcial2-gi-api:latest
          format: table
          exit-code: 1
          ignore-unfixed: true
          vuln-type: 'os,library'

      - name: 🚀 Run container and test healthcheck
        run: |
          docker run -d --name test-container --network host angiediazz/sistemasoperativos-parcial2-gi-api:latest

          echo "⏳ Esperando que arranque el contenedor..."
          sleep 10

          echo "📋 Mostrando contenedores activos:"
          docker ps

          echo "📡 Logs del contenedor:"
          docker logs test-container || true

          echo "🌐 Verificando endpoint de salud"
          response=$(curl --retry 5 --retry-delay 3 --fail --silent http://localhost:8080/health/)
          echo "Respuesta: $response"

          if [[ "$response" != *"Hola Docker!"* ]]; then
            echo "❌ La respuesta no es válida."
            docker stop test-container
            docker rm test-container
            exit 1
          fi

          echo "✅ Healthcheck exitoso."
          docker stop test-container
          docker rm test-container
